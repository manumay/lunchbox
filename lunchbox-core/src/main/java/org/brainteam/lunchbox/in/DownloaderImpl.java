package org.brainteam.lunchbox.in;import java.io.File;import java.io.IOException;import java.net.URL;import org.apache.commons.io.FileUtils;import org.brainteam.lunchbox.core.Directories;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.context.annotation.Scope;import org.springframework.stereotype.Component;@Component@Scope("prototype")public class DownloaderImpl implements Downloader {		private static final int TIMEOUT = 10000;		@Autowired	private Directories directories;		@Override	public File download(URL source) throws IOException {		if (source == null) {			throw new IllegalArgumentException("source may not be null");		}		File destination = new File(getDirectories().getTempDir(), source.getFile());		FileUtils.forceDeleteOnExit(destination);		FileUtils.copyURLToFile(source, destination, TIMEOUT, TIMEOUT);		return destination;	}		protected Directories getDirectories() {		return directories;	}}