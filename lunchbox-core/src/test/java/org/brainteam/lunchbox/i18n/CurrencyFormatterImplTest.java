package org.brainteam.lunchbox.i18n;import static org.mockito.Mockito.when;import static org.testng.Assert.assertEquals;import static org.testng.Assert.assertNotNull;import java.util.Locale;import org.brainteam.lunchbox.jmx.InternationalizationConfiguration;import org.mockito.InjectMocks;import org.mockito.Mock;import org.mockito.MockitoAnnotations;import org.testng.annotations.BeforeClass;import org.testng.annotations.Test;@Test(groups="unit")public class CurrencyFormatterImplTest {	private static final Long UNITS = Long.valueOf(199);		@Mock	private InternationalizationConfiguration configuration;		@InjectMocks	private CurrencyFormatterImpl currencyFormatter = new CurrencyFormatterImpl();		@BeforeClass	public void setup() {		MockitoAnnotations.initMocks(this);		when(configuration.getLocale()).thenReturn(Locale.GERMANY, Locale.US);	}		@Test	public void testFormat() {		String formatted = currencyFormatter.format(UNITS);		assertNotNull(formatted);		assertEquals(formatted, "1,99 â‚¬");				formatted = currencyFormatter.format(UNITS);		assertNotNull(formatted);		assertEquals(formatted, "$1.99");	}	}