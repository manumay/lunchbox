package org.brainteam.lunchbox.mvc;import static org.mockito.Mockito.verify;import static org.mockito.Mockito.when;import static org.testng.Assert.assertSame;import java.util.Date;import org.brainteam.lunchbox.json.JsonOrders;import org.brainteam.lunchbox.services.OrderService;import org.brainteam.lunchbox.util.DateUtils;import org.mockito.InjectMocks;import org.mockito.Mock;import org.mockito.MockitoAnnotations;import org.testng.annotations.BeforeClass;import org.testng.annotations.Test;@Test(groups={"unit"})public class OrdersResourceTest {		private static final Integer YEAR = Integer.valueOf(2000);	private static final Integer MONTH = Integer.valueOf(12);	private static final Integer DAY = Integer.valueOf(24);	private static final Date DATE = DateUtils.getDay(DAY, MONTH, YEAR);	@Mock	private JsonOrders json;		@Mock	private OrderService orderService;		@InjectMocks	private OrdersResource ordersResource;		@BeforeClass	public void setup() {		MockitoAnnotations.initMocks(this);		when(orderService.getJsonOrders(DATE)).thenReturn(json);	}		@Test	public void testGetForDay() {		JsonOrders result = ordersResource.getForDay(YEAR, MONTH, DAY);		verify(orderService).getJsonOrders(DATE);		assertSame(result, json);	}	}