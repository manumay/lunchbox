package org.brainteam.lunchbox.mvc;import static org.mockito.Mockito.verify;import static org.mockito.Mockito.when;import static org.testng.Assert.assertSame;import org.brainteam.lunchbox.json.JsonPage;import org.brainteam.lunchbox.json.JsonUser;import org.brainteam.lunchbox.services.UserService;import org.mockito.InjectMocks;import org.mockito.Mock;import org.mockito.MockitoAnnotations;import org.testng.annotations.BeforeClass;import org.testng.annotations.Test;@Test(groups={"unit"})public class UsersResourceTest {		private static final int PAGENUMBER = 1;	private static final int PAGESIZE = 10;	private static final String SORT = "sort";	private static final String SORTORDER = "sortorder";	@Mock	private JsonPage<JsonUser> json;		@Mock	private UserService userService;		@InjectMocks	private UsersResource usersResource;		@BeforeClass	public void setup() {		MockitoAnnotations.initMocks(this);		when(userService.getUsersJson(PAGENUMBER-1, PAGESIZE, SORT, SORTORDER)).thenReturn(json);	}		@Test	public void testGet() {		JsonPage<JsonUser> result = usersResource.get(PAGENUMBER, PAGESIZE, SORT, SORTORDER);		verify(userService).getUsersJson(PAGENUMBER-1, PAGESIZE, SORT, SORTORDER);		assertSame(result, json);	}	}